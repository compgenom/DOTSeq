% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitDOT.R
\name{fitDOT}
\alias{fitDOT}
\title{Fit DOTSeq Differential Translation Models}
\usage{
fitDOT(
  countTable,
  conditionTable,
  flattenedFile,
  bed,
  rnaSuffix = ".rna",
  riboSuffix = ".ribo",
  baseline = NULL,
  formula = NULL,
  sampleDelim = NULL,
  batchCol = NULL,
  pseudoCnt = 1e-06,
  minCount = 1,
  stringent = NULL,
  parallel = FALSE,
  seed = NULL,
  plotMeanDispersion = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{countTable}{Either a path to a count table file or a data frame.
The file/data frame must have columns: Geneid, Chr, Start, End, Strand, Length,
plus one column per sample.}

\item{conditionTable}{Either a path to a condition metadata file or a data frame.
Must include columns: run, strategy, condition, replicate.}

\item{flattenedFile}{Optional path to a flattened GFF/GTF file containing exon definitions.}

\item{bed}{Path to a BED file with ORF annotations.}

\item{rnaSuffix}{Character suffix to identify RNA-seq columns (default: \code{".rna"}).}

\item{riboSuffix}{Character suffix to identify Ribo-seq columns (default: \code{".ribo"}).}

\item{baseline}{Optional character specifying the baseline condition for contrasts.
If NULL, the function attempts to infer it automatically (default: NULL).}

\item{formula}{A formula object specifying the design, e.g., ~ 0 + replicate + condition * strategy.}

\item{sampleDelim}{Delimiter used in sample name. Use "." if sample IDs are unique,
e.g. SRR, DRR, or ERR run accessions (default: NULL).}

\item{batchCol}{String; name of the column in \code{conditionTable} that specifies batch assignments,
e.g., "batch". If NULL, batch effects are not modeled (default: NULL).}

\item{pseudoCnt}{Numeric pseudo-count to avoid division by zero when computing TE (default: 1e-6).}

\item{minCount}{Minimum count threshold for filtering ORFs (default: 1).}

\item{stringent}{Logical or NULL; determines the filtering strategy:
\itemize{
\item TRUE: keep ORFs where all replicates in at least one condition pass \code{minCount}.
\item FALSE: keep ORFs where all replicates in at least one condition-strategy group pass \code{minCount}.
\item NULL: keep ORFs where total counts across replicates pass \code{minCount}.
}}

\item{parallel}{A logical value indicating whether to use parallel
computation. If \code{TRUE}, the function will distribute tasks across
multiple cores as configured by the \code{BiocParallel} package. If \code{FALSE},
the function will run sequentially on a single core (default: FALSE).}

\item{seed}{An optional integer. Use to set the seed for the random number
generator to ensure reproducible results (default: NULL).}

\item{plotMeanDispersion}{Logical; if TRUE, plots the mean-dispersion plots (default: FALSE).}

\item{verbose}{Logical; if TRUE, prints progress messages (default: FALSE).}
}
\value{
A named \code{list} with the following elements:
\describe{
\item{rawCnts}{Raw counts matrix for all samples.}
\item{normCnts}{Normalized counts matrix for all samples.}
\item{orfs}{Data frame of ORFs derived from the BED file matched to the DOTSeq object.}
\item{absoluteTE}{Matrix of translational efficiency values per ORF and sample.}
\item{occupancyShift}{Matrix of log2-transformed ribo/rna proportions within genes.}
\item{dds}{DESeq2 object usd for modelling differential gene translation analysis.}
\item{sumExp}{SummarizedExperiment object containing normalized counts and sample metadata.}
\item{dxd}{DOTSeq object used for modelling exon/ORF-level counts.}
\item{formula}{Design formula used in \code{satuRn::fitDTU}.}
\item{contrastMat}{Contrast matrix used for differential ORF translation testing.}
}
}
\description{
This function performs the complete DOTSeq analysis pipeline:
loading count data, aligning with sample metadata, filtering ORFs,
normalising counts, calculating translational efficiency (TE), and
fitting quasi-binomial and negative binomial generalised linear models for
differential ORF translation using \code{satuRn::fitDTU} and \code{DESeq2::DESeq}.
}
\examples{
\dontrun{
result <- fitDOT(
  countTable = "counts.txt",
  conditionTable = "samples.txt",
  flattenedFile = "flattened.gff",
  bed = "orfs.bed",
  rnaSuffix = ".rna",
  riboSuffix = ".ribo",
  pseudoCnt = 1e-6,
  minCount = 1,
  stringent = TRUE,
  seed = 42,
  verbose = TRUE
)
head(result$absoluteTE)
head(result$occupancyShift)
}

}
