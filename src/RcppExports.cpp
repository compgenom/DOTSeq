// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// findORFsFastaCpp
S4 findORFsFastaCpp(CharacterVector& fastaSeqs, std::string startCodon, std::string stopCodon, int minimumLength, bool isCircular, bool plusStrandOnly);
RcppExport SEXP _DOTSeq_findORFsFastaCpp(SEXP fastaSeqsSEXP, SEXP startCodonSEXP, SEXP stopCodonSEXP, SEXP minimumLengthSEXP, SEXP isCircularSEXP, SEXP plusStrandOnlySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector& >::type fastaSeqs(fastaSeqsSEXP);
    Rcpp::traits::input_parameter< std::string >::type startCodon(startCodonSEXP);
    Rcpp::traits::input_parameter< std::string >::type stopCodon(stopCodonSEXP);
    Rcpp::traits::input_parameter< int >::type minimumLength(minimumLengthSEXP);
    Rcpp::traits::input_parameter< bool >::type isCircular(isCircularSEXP);
    Rcpp::traits::input_parameter< bool >::type plusStrandOnly(plusStrandOnlySEXP);
    rcpp_result_gen = Rcpp::wrap(findORFsFastaCpp(fastaSeqs, startCodon, stopCodon, minimumLength, isCircular, plusStrandOnly));
    return rcpp_result_gen;
END_RCPP
}
// orfs_as_IRanges
S4 orfs_as_IRanges(std::string& main_string, const std::string s, const std::string e, int minimumLength);
RcppExport SEXP _DOTSeq_orfs_as_IRanges(SEXP main_stringSEXP, SEXP sSEXP, SEXP eSEXP, SEXP minimumLengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type main_string(main_stringSEXP);
    Rcpp::traits::input_parameter< const std::string >::type s(sSEXP);
    Rcpp::traits::input_parameter< const std::string >::type e(eSEXP);
    Rcpp::traits::input_parameter< int >::type minimumLength(minimumLengthSEXP);
    rcpp_result_gen = Rcpp::wrap(orfs_as_IRanges(main_string, s, e, minimumLength));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DOTSeq_findORFsFastaCpp", (DL_FUNC) &_DOTSeq_findORFsFastaCpp, 6},
    {"_DOTSeq_orfs_as_IRanges", (DL_FUNC) &_DOTSeq_orfs_as_IRanges, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_DOTSeq(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
